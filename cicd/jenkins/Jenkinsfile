pipeline {
  agent any

  environment {
    IMAGE_NAME     = "flask-todo-app"        // Base name for Docker image
    LOCAL_REGISTRY = "localhost:5001"        // Local registry used by Minikube
  }

  stages {

    stage('Clone Backend Code') {
      steps {
        echo "Cloning backend code"
        sh 'ls -l dev/bkend/app'             // Confirm app files exist
      }
    }

    stage('Build Docker Image') {
      steps {
        script {
          // Get Git short hash for tagging
          COMMIT_HASH = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim()
          
          // Save as env var so next stage can use
          env.IMAGE_TAG = "${LOCAL_REGISTRY}/${IMAGE_NAME}:${COMMIT_HASH}"

          // Build Docker image
          dir('dev/bkend/app') {
            sh "docker build -t ${env.IMAGE_TAG} ."
          }
        }
      }
    }

    stage('Push to Local Registry') {
      steps {
        script {
          sh "docker push ${env.IMAGE_TAG}"
          sh "docker images | grep ${IMAGE_NAME}"
        }
      }
    }

    stage('Done') {
      steps {
        echo "Image pushed: ${env.IMAGE_TAG}"
        echo "Run this manually on your terminal:"
        echo "kubectl set image deployment/flask-todo-deployment flask-todo=${env.IMAGE_TAG} --record"
      }
    }

  }
}
